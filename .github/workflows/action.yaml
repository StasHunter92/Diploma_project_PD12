name: Build_deploy
on: [ push ]
jobs:
  #  code_check:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Check out source repository
  #        uses: actions/checkout@v3
  #      - name: Set up Python environment
  #        uses: actions/setup-python@v4
  #        with:
  #          python-version: "3.10"
  #      - name: flake8 Lint
  #        uses: py-actions/flake8@v2
  #        with:
  #          exclude: "./core/migrations/"
  #          max-line-length: "120"
  #          # ignore: W605,F541
  #          ignore: F401

  build_push:
    runs-on: ubuntu-latest
    # needs: code_check
    steps:
      - name: clone code
        uses: actions/checkout@v2

      - name: docker build
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: docker build -t stashunter/todolist:${GITHUB_REF_NAME}-${GITHUB_RUN_ID} .

      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
        # run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: docker push
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: docker push stashunter/todolist:${GITHUB_REF_NAME}-${GITHUB_RUN_ID}

  deploy:
    runs-on: ubuntu-latest
    needs: build_push
    env:
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      SECRET_KEY: ${{ secrets.SECRET_KEY}}
    steps:
      - name: clone code
        uses: actions/checkout@v2

      - name: render configs
        run: |
          mkdir todolist
          cat docker-compose-ci.yaml | envsubst > todolist/docker-compose.yaml
          cat .env.deploy | envsubst > todolist/.env
      #      - name: export secrets
      #        env:
      #          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      #          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      #        run: |
      #          export POSTGRES_PASSWORD="${POSTGRES_PASSWORD}"
      #          export POSTGRES_DB="${POSTGRES_DB}"

      - name: copy compose file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          source: "todolist/docker-compose.yaml"
          target: "diploma_project"
          strip_components: 1

      - name: copy env file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          source: "todolist/.env"
          target: "diploma_project"
          strip_components: 1

      - name: delete temporary directory
        run: |
          rm -rf todolist

  run_server:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: run_server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          script: |
            cd diploma_project
            echo ${{ secrets.HOST_PASSWORD }} | sudo -S docker-compose up -d